import requests
import telebot
from telebot import types

TOKEN = '8303447653:AAHGL7wr4sHJppxDzqkQetv7bPcaHRz56AA'
WEATHER_API_KEY = 'bd1e0750cb164e1c9f175857251408'

bot = telebot.TeleBot(TOKEN)

CITIES = {
    '–ú–æ—Å–∫–≤–∞': 'Moscow',
    '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': 'Saint Petersburg',
    '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': 'Novosibirsk',
    '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': 'Yekaterinburg',
    '–ö–∞–∑–∞–Ω—å': 'Kazan',
    '–°–æ—á–∏': 'Sochi',
    '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫': 'Vladivostok',
    '–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫': 'Magnitogorsk'
}


def get_weather(city_name):
    base_url = "http://api.weatherapi.com/v1/current.json"

    try:
        params = {
            'key': WEATHER_API_KEY,
            'q': city_name,
            'lang': 'ru'
        }

        response = requests.get(base_url, params=params)
        data = response.json()

        if 'error' in data:
            print(f"–û—à–∏–±–∫–∞ API: {data['error']['message']}")
            return None

        current = data['current']
        location = data['location']

        weather_data = {
            'city': location['name'],
            'country': location['country'],
            'temp': current['temp_c'],
            'feels_like': current['feelslike_c'],
            'condition': current['condition']['text'],
            'wind_speed': current['wind_kph'] / 3.6,  # –∫–º/—á –≤ –º/—Å
            'wind_dir': current['wind_dir'],
            'pressure': current['pressure_mb'] * 0.750062,  # –º–±–∞—Ä –≤ –º–º —Ä—Ç.—Å—Ç.
            'humidity': current['humidity'],
            'cloud': current['cloud'],
            'is_day': current['is_day'] == 1,
            'icon': current['condition']['icon']
        }
        return weather_data
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
        return None


def get_weather_icon(icon_url):
    if 'day' in icon_url:
        return '‚òÄÔ∏è' if '113' in icon_url else '‚õÖ'
    else:
        return 'üåô' if '113' in icon_url else '‚òÅÔ∏è'


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    buttons = [types.KeyboardButton(city) for city in CITIES.keys()]
    markup.add(*buttons)

    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –ø–æ–≥–æ–¥—É. –í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥:",
        reply_markup=markup
    )


@bot.message_handler(func=lambda message: message.text in CITIES.keys())
def send_weather(message):
    city_ru = message.text
    city_en = CITIES[city_ru]

    bot.send_message(message.chat.id, f"–ó–∞–≥—Ä—É–∂–∞—é –ø–æ–≥–æ–¥—É –¥–ª—è {city_ru}...")

    weather = get_weather(city_en)

    if weather:
        daytime = "–¥–µ–Ω—å" if weather['is_day'] else "–Ω–æ—á—å"
        icon = get_weather_icon(weather['icon'])

        response = (
            f"{icon} –ü–æ–≥–æ–¥–∞ –≤ {weather['city']}, {weather['country']} ({daytime}):\n"
            f"{icon} {weather['condition']}\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather['temp']:.1f}¬∞C\n"
            f"üßä –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather['feels_like']:.1f}¬∞C\n"
            f"üí® –í–µ—Ç–µ—Ä: {weather['wind_speed']:.1f} –º/—Å, {weather['wind_dir']}\n"
            f"üìä –î–∞–≤–ª–µ–Ω–∏–µ: {weather['pressure']:.0f} –º–º —Ä—Ç.—Å—Ç.\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather['humidity']}%\n"
            f"‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {weather['cloud']}%"
        )
    else:
        response = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    bot.send_message(message.chat.id, response)


@bot.message_handler(func=lambda message: True)
def handle_unknown(message):
    bot.send_message(
        message.chat.id,
        "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /start."
    )


if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True)